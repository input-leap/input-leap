#!/bin/bash

# Define constant variables
readonly INSTALLER_PACKAGE_NAME="InputLeap-@INPUTLEAP_VERSION@.dmg"
readonly SCRIPT_DIRECTORY=$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)
readonly RE_REFERENCE_SCRIPT="$SCRIPT_DIRECTORY/reref_dylibs.sh"
QT_VERSION="${QT_VERSION:-6}"
QT_VERSION_SUFFIX=""
if [ "$QT_VERSION" -eq "5" ]; then
    QT_VERSION_SUFFIX="5"
fi
QT_PLUGIN_NAME="libqcocoa.dylib"
QT_PLUGIN_PATH=""

# Helper function to print warnings in yellow color
warn() { 
    echo -e "\e[1;33m${*}\e[0m"
}

# Notify user about deprecated scripts
warn "Note: The scripts build_installer.sh and reref_dylibs.sh are deprecated."
warn "Please use build_dist.sh instead for deploying using macdeployqt."

# Change to script directory
cd "$SCRIPT_DIRECTORY" || exit 1

# Check if the re-reference script exists and is executable
if [[ ! -x "$RE_REFERENCE_SCRIPT" ]]; then
    echo "The required script is missing: $RE_REFERENCE_SCRIPT"
    exit 1
fi

# Remove any existing installer package
rm -rf temp.dmg "$INSTALLER_PACKAGE_NAME"

# Check if the application's Contents directory exists
if [[ ! -d "InputLeap.app/Contents" ]]; then
    echo "Please ensure the application was built successfully"
    echo "before attempting to create the installer."
    exit 1
fi

# Move into the Contents directory
cd InputLeap.app/Contents || exit 1

# Clean and recreate MacOS directory
rm -rf MacOS
mkdir MacOS && cd MacOS || exit 1

# Copy all executable files to the MacOS directory
cp @CMAKE_RUNTIME_OUTPUT_DIRECTORY@/* . || exit 1

# Find the path to the required Qt plugin
if command -v brew >/dev/null; then
    echo "Homebrew detected"
    QT_PLUGIN_PATH=$(find "$(brew --cellar)/qt${QT_VERSION_SUFFIX}" -type f -name "${QT_PLUGIN_NAME}" -print -quit)
fi

# If the plugin is not found yet, look in the opt directory
if [[ -z "$QT_PLUGIN_PATH" ]]; then
    QT_PLUGIN_PATH=$(find "/opt/local/libexec/qt${QT_VERSION}/plugins" -type f -name "${QT_PLUGIN_NAME}" -print -quit)
fi

# If the plugin is still not found, exit with an error
if [[ -z "$QT_PLUGIN_PATH" ]]; then
    echo "The cocoa platform plugin for Qt version ${QT_VERSION} could not be found."
    exit 1
fi

# Copy the Qt platform plugin to the platforms directory
mkdir platforms && cp "$QT_PLUGIN_PATH" platforms/ || exit 1

# Update file permissions
chmod -R u+rw . || exit 1

# Update library references
$RE_REFERENCE_SCRIPT input-leap || exit 1
$RE_REFERENCE_SCRIPT platforms/libqcocoa.dylib ../ || exit 1

echo "InputLeap.app was created successfully"

# Ensure only release builds are distributed
if [[ "@CMAKE_BUILD_TYPE@" != "Release" ]]; then
    echo "Only release builds can create a dmg."
    exit 1
fi

# Move back to the root directory
cd ../../.. || exit 1

# Create a new disk image file
hdiutil create -size 64m -fs HFS+ -volname "InputLeap" temp.dmg || exit 1
hdiutil attach temp.dmg -mountpoint mnt || exit 1

# Copy the application into the disk image
cp -r InputLeap.app mnt/ || exit 1
hdiutil detach mnt || exit 1

# Convert the disk image to a compressed format
hdiutil convert temp.dmg -format UDZO -o "$INSTALLER_PACKAGE_NAME" || exit 1
rm temp.dmg

echo "The dmg $INSTALLER_PACKAGE_NAME was created successfully"